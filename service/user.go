package service

import (
	"github.com/ekokurniadi/micagen/entity"
	"github.com/ekokurniadi/micagen/input"
	"github.com/ekokurniadi/micagen/repository"
)

type UserService interface {
	UserServiceCreate(input input.UserInput) (entity.User, error)
	UserServiceUpdate(inputID input.InputIDUser, inputData input.UserInput) (entity.User, error)
	UserServiceDeleteByID(inputID input.InputIDUser) (bool, error)
}
type userService struct {
	repository repository.UserRepository
}

func NewUserService(repository repository.UserRepository) *userService {
	return &userService{repository}
}
func (s *userService) UserServiceCreate(input input.UserInput) (entity.User, error) {
	user := entity.User{}
	user.Username = input.Username
	user.Password = input.Password
	user.CreatedAt = input.CreatedAt
	user.UpdatedAt = input.UpdatedAt
	newUser, err := s.repository.SaveUser(user)
	if err != nil {
		return newUser, err
	}
	return newUser, nil
}

//Generated by Micagen at 27 Oktober 2021
